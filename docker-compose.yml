version: '3.8'

services:
  generator:
    build:
      context: .
    env_file:
      - .env
    volumes:
      - ./data:/data
    command: python generate_data.py
    restart: "no"

  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: social
      POSTGRES_USER: social
      POSTGRES_PASSWORD: social_pass
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./data:/data

  pg_import:
    image: postgres:15
    depends_on:
      - postgres
      - generator
    volumes:
      - ./data:/data
      - ./postgres/import.sql:/import.sql
      - ./wait-for-data.sh:/wait-for-data.sh
    entrypoint:
      [
        "bash", "-c",
        "/wait-for-data.sh /data && sleep 10 && psql -h postgres -U social -d social -f /import.sql"
      ]
    environment:
      PGPASSWORD: social_pass

  neo4j:
    image: neo4j:5
    restart: unless-stopped
    environment:
      NEO4J_AUTH: neo4j/neo4j_pass
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - ./data:/import
      - ./neo4j/schema.cypher:/schema.cypher
      - ./neo4j/import.cypher:/import.cypher

  neo4j_import:
    image: neo4j:5
    depends_on:
      - neo4j
      - generator
    volumes:
      - ./data:/import
      - ./neo4j/schema.cypher:/schema.cypher
      - ./neo4j/import.cypher:/import.cypher
    entrypoint:
      [
        "bash", "-c",
        "for i in {1..30}; do \
          if cypher-shell -a bolt://neo4j:7687 -u neo4j -p neo4j_pass 'RETURN 1' 2>/dev/null; then echo 'Neo4j is up'; break; fi; \
          echo 'Waiting for Neo4j to accept cypher-shell...'; \
          sleep 2; \
        done && \
        cypher-shell -a bolt://neo4j:7687 -u neo4j -p neo4j_pass -f /schema.cypher && \
        cypher-shell -a bolt://neo4j:7687 -u neo4j -p neo4j_pass -f /import.cypher"
      ]


